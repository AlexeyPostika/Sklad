<UserControl x:Class="Sklad_v1_001.Control.FlexFilter.FlexGridCheckBoxColorWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sklad_v1_001.Control.FlexFilter"
             xmlns:FlexButton="clr-namespace:Sklad_v1_001.Control.FlexButton" 
             xmlns:FlexFilter="clr-namespace:Sklad_v1_001.Control.FlexFilter"
             xmlns:FlexEditBox="clr-namespace:Sklad_v1_001.Control.FlexEditBox" 
             xmlns:res="clr-namespace:Sklad_v1_001.Properties"
             xmlns:Toolbar="clr-namespace:Sklad_v1_001.Control.Toolbar"
             mc:Ignorable="d" x:Name="control"                  
             MouseEnter="control_MouseEnter"
             MouseMove="control_MouseMove"
             Style="{DynamicResource WindowStyleItem2}" 
             SizeChanged="control_SizeChanged">
    <Grid x:Name="PopupFilter" MaxHeight="462">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="1*"/>
            <RowDefinition x:Name="ButtonRowDefinition" Height="50"/>
        </Grid.RowDefinitions>
        <Toolbar:Close x:Name="Toolbar" Width="Auto" ButtonCloseClick="Close_ButtonCloseClick" ButtonClearFiltersVisible="Collapsed" HeaderText ="{Binding Path=TitleText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <FlexEditBox:EditBoxDeleteWithLabel LabelText="{x:Static res:Resources.Search}" Grid.Row="1" x:Name="SearchFilter" VerticalAlignment="Center" Text="{Binding Path=Search, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ButtonClearClick="SearchFilter_ButtonClearClick" ButtonTextChangedClick="SearchFilter_ButtonTextChangedClick" Margin="10,0,0,0"/>
        <DataGrid Name="ElementDataGrid" 
                  Style="{DynamicResource DataGridStyle}" 
                  ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                  RowStyle="{DynamicResource DataGridRowStyle}" 
                  CellStyle="{DynamicResource DataGridCellStyle}"   
                  AutoGenerateColumns="False"                                    
                  CanUserAddRows="False"                               
                  MouseLeftButtonUp="ElementDataGrid_MouseLeftButtonUp"
                  MouseDoubleClick="ElementDataGrid_MouseDoubleClick"
                  Grid.Row="2"                   
                  Sorting="ElementDataGrid_Sorting">
            <DataGrid.Resources>
                <local:DataContextSpy x:Key="dcSpy" DataContext="{Binding ElementName=control, Path=LabelText, Mode=TwoWay}"/>
                <local:DataContextSpy x:Key="dcSpy1" DataContext="{Binding ElementName=control, Path=CheckAll, Mode=TwoWay}"/>
                <local:DataContextSpy x:Key="dcSpy2" DataContext="{Binding ElementName=control, Path=VisibleColor, Mode=TwoWay}"/>
                <local:DataContextSpy x:Key="dcSpy3" DataContext="{Binding ElementName=control, Path=IsMultiSelect, Mode=TwoWay}"/>
                <local:DataContextSpy x:Key="dcSpy4" DataContext="{Binding ElementName=control, Path=IsVisibilityHeaderCheckBox, Mode=TwoWay}"/>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTemplateColumn Width="50">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <CheckBox x:Name="CheckAll" Visibility="{Binding Source={StaticResource dcSpy4}, Path=DataContext}" IsEnabled="{Binding Source={StaticResource dcSpy3}, Path=DataContext}" IsChecked="{Binding Source={StaticResource dcSpy1}, Path=DataContext}" Style="{DynamicResource CheckBoxStyle}" Click="CheckAll_Click" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center"  Style="{DynamicResource CheckBoxStyle}" VerticalAlignment="Center" IsChecked="{Binding Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MouseLeftButtonUp="ElementDataGrid_MouseLeftButtonUp" Click="CheckBox_Click"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="Description" CanUserSort="True" Width="Auto" Visibility="{Binding Source={StaticResource dcSpy2}, Path=DataContext}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border Background="{Binding Path=Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <Grid>
                                    <Label Margin="0" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource GridLabelStyle}" Foreground="Black" Content="{Binding Path=ShortDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="Description" CanUserSort="True" Header="{Binding Source={StaticResource dcSpy}, Path=DataContext}" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Path=Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
        <WrapPanel x:Name="ButtonWrapPanel" Grid.Row="3" HorizontalAlignment="Center">
            <FlexButton:ToolBarButton x:Name="ButtonOk" Text="{x:Static res:Resources.MessageOK}" ButtonClick="ButtonOk_ButtonClick" Margin="0,0,6,10" HorizontalAlignment="Center"/>
            <FlexButton:ToolBarButton x:Name="ButtonCancel" Text="{x:Static res:Resources.MessageCancel}" ButtonClick="ButtonCancel_ButtonClick" Margin="6,0,0,10" HorizontalAlignment="Center"/>
        </WrapPanel>

    </Grid>
</UserControl>
